name: 🚀 球探社 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Deploy to environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  FLUTTER_VERSION: '3.32.4'
  DENO_VERSION: '2.0.0'

jobs:
  # 代码质量检查
  code-quality:
    name: 🔍 Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: 🦕 Setup Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: ${{ env.DENO_VERSION }}
    
    - name: 📦 Get Flutter dependencies
      run: flutter pub get
    
    - name: 🔍 Analyze Flutter code
      run: flutter analyze --fatal-infos
    
    - name: 🧪 Check Deno code
      run: |
        cd backend
        deno check --unstable-temporal-api mod.ts
        deno lint
    
    - name: 📝 Check formatting
      run: |
        flutter format --set-exit-if-changed lib/
        cd backend && deno fmt --check

  # Flutter测试
  flutter-test:
    name: 🧪 Flutter Tests
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: 📦 Get dependencies
      run: flutter pub get
    
    - name: 🏗️ Build generated files
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
    
    - name: 🧪 Run tests
      run: flutter test --coverage
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: coverage/lcov.info
        flags: flutter
        name: flutter-coverage
        fail_ci_if_error: false

  # Deno测试
  deno-test:
    name: 🦕 Deno Tests
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🦕 Setup Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: ${{ env.DENO_VERSION }}
    
    - name: 🧪 Run backend tests
      run: |
        cd backend
        deno test --allow-net --allow-read --allow-env --coverage
    
    - name: 📊 Generate coverage report
      run: |
        cd backend
        deno coverage --lcov > coverage.lcov
    
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: backend/coverage.lcov
        flags: deno
        name: deno-coverage
        fail_ci_if_error: false

  # Web构建
  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    needs: [flutter-test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: 📦 Get dependencies
      run: flutter pub get
    
    - name: 🏗️ Build generated files
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
    
    - name: 🌐 Build for web
      run: flutter build web --release --no-tree-shake-icons
    
    - name: 📁 Upload web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/
        retention-days: 30

  # Android构建
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    needs: [flutter-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: 📦 Get dependencies
      run: flutter pub get
    
    - name: 🏗️ Build generated files
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
    
    - name: 🤖 Build Android APK
      run: flutter build apk --release
    
    - name: 🤖 Build Android AAB
      run: flutter build appbundle --release
    
    - name: 📁 Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-build
        path: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab
        retention-days: 30

  # iOS构建 (仅在macOS上)
  build-ios:
    name: 🍎 Build iOS
    runs-on: macos-latest
    needs: [flutter-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: 📦 Get dependencies
      run: flutter pub get
    
    - name: 🏗️ Build generated files
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
    
    - name: 🍎 Build iOS (no code sign)
      run: flutter build ios --release --no-codesign
    
    - name: 📁 Upload iOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios/iphoneos/Runner.app
        retention-days: 30

  # macOS构建
  build-macos:
    name: 🖥️ Build macOS
    runs-on: macos-latest
    needs: [flutter-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: 📦 Get dependencies
      run: flutter pub get
    
    - name: 🏗️ Build generated files
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
    
    - name: 🖥️ Build macOS
      run: flutter build macos --release
    
    - name: 📁 Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: build/macos/Build/Products/Release/ball_scout.app
        retention-days: 30

  # 部署到GitHub Pages (Web)
  deploy-web:
    name: 🚀 Deploy Web to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-web, deno-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: ./web
    
    - name: 🔧 Setup Pages
      uses: actions/configure-pages@v4
    
    - name: 📁 Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./web
    
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # 容器化部署 (可选)
  deploy-docker:
    name: 🐳 Build and Deploy Docker
    runs-on: ubuntu-latest
    needs: [build-web, deno-test]
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📥 Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-build
        path: ./build/web
    
    - name: 🔑 Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: 🏗️ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: 🐳 Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/ball-scout:latest
          ${{ secrets.DOCKER_USERNAME }}/ball-scout:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # 发布通知
  notify:
    name: 📢 Send Notification
    runs-on: ubuntu-latest
    needs: [deploy-web]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📢 Send success notification
      if: needs.deploy-web.result == 'success'
      run: |
        echo "✅ 球探社部署成功！"
        echo "🌐 Web: https://${{ github.repository_owner }}.github.io/ball-scout"
        echo "📱 APK下载: https://github.com/${{ github.repository }}/actions"
    
    - name: 📢 Send failure notification
      if: needs.deploy-web.result == 'failure'
      run: |
        echo "❌ 球探社部署失败！"
        echo "🔗 查看详情: https://github.com/${{ github.repository }}/actions"

  # 自动创建Release (当push tag时)
  release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-web, build-android, build-ios, build-macos]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 📥 Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          android-build/app-release.apk
          android-build/app-release.aab
        body: |
          ## 🎉 球探社 ${{ github.ref_name }} 发布
          
          ### 📱 下载链接
          - 🤖 **Android APK**: 见下方附件
          - 🌐 **Web版本**: https://${{ github.repository_owner }}.github.io/ball-scout
          
          ### 📝 更新内容
          详见提交记录和PR描述
          
          ### 🔧 技术信息
          - Flutter: ${{ env.FLUTTER_VERSION }}
          - Deno: ${{ env.DENO_VERSION }}
          - 构建时间: ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
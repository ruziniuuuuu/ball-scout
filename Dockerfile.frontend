# 球探社前端 Dockerfile
# 多阶段构建，优化生产镜像大小

# 第一阶段：构建环境
FROM flutter/flutter:3.16.0-stable AS builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libgconf-2-4 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 复制项目配置文件
COPY pubspec.yaml pubspec.lock ./

# 获取依赖
RUN flutter pub get

# 复制源代码
COPY lib/ lib/
COPY web/ web/
COPY assets/ assets/
COPY analysis_options.yaml ./

# 构建Web应用
RUN flutter build web --release --dart-define=ENVIRONMENT=production

# 第二阶段：生产环境
FROM nginx:1.24-alpine

# 安装必要工具
RUN apk add --no-cache curl

# 创建非root用户
RUN addgroup -g 1001 -S ballscout && \
    adduser -S ballscout -u 1001

# 复制构建产物
COPY --from=builder /app/build/web /usr/share/nginx/html

# 复制nginx配置
COPY nginx.conf /etc/nginx/nginx.conf
COPY nginx-default.conf /etc/nginx/conf.d/default.conf

# 创建必要目录并设置权限
RUN mkdir -p /var/log/nginx /var/cache/nginx /var/run && \
    chown -R ballscout:ballscout /var/log/nginx /var/cache/nginx /var/run /usr/share/nginx/html

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# 切换用户
USER ballscout

# 暴露端口
EXPOSE 3000

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]